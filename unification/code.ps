%!PS-Adobe-3.0
%%BoundingBox: 18 36 594 756
%%Title: letter
%%Creator: GNU Enscript 1.6.5.90
%%CreationDate: Sun Jul  5 17:53:07 2020
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6.5 90
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6.5 90
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier-Bold /F-gs-font MF
/F-gs-font 12 12 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6.5 90

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 576 def
/d_page_h 720 def
/d_header_x 0 def
/d_header_y 705 def
/d_header_w 576 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 576 def
/d_footer_h 0 def
/d_output_w 576 def
/d_output_h 705 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
18 36 translate
/pagenum 1 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 690 M
(;;;; Generic unify, generalized to segments.) s
26.6 677 M
(;;;    Summer 2019.  First draft by GJS, improved with help) s
26.6 664 M
(;;;    of Will Byrd and Michael Ballantyne.  Further) s
26.6 651 M
(;;;    debugged with Kenny Chen, and later with Chris Hanson.) s
26.6 625 M
(\(define \(unifier pattern1 pattern2\)) s
26.6 612 M
(  \(let \(\(dict \(unify pattern1 pattern2\)\)\)) s
26.6 599 M
(    \(and dict) s
26.6 586 M
(         \(\(match:dict-substitution dict\) pattern1\)\)\)\)) s
26.6 560 M
(\(define \(unify pattern1 pattern2\)) s
26.6 547 M
(  \(unify:internal pattern1 pattern2) s
26.6 534 M
(                  \(match:new-dict\)) s
26.6 521 M
(                  \(lambda \(dict\) dict\)\)\)) s
26.6 495 M
(;;; This is the programmer's interface to the unifier.) s
26.6 469 M
(\(define \(unify:internal pattern1 pattern2 dict succeed\)) s
26.6 456 M
(  \(\(unify:dispatch \(list pattern1\) \(list pattern2\)\)) s
26.6 443 M
(   dict) s
26.6 430 M
(   \(lambda \(dict fail rest1 rest2\)) s
26.6 417 M
(     \(assert \(list? rest1\)\)) s
26.6 404 M
(     \(assert \(list? rest2\)\)) s
26.6 391 M
(     \(or \(and \(null? rest1\) \(null? rest2\)) s
26.6 378 M
(              \(succeed dict\)\)) s
26.6 365 M
(         \(fail\)\)\)) s
26.6 352 M
(   \(lambda \(\) #f\)\)\)) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
18 36 translate
/pagenum 2 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 677 M
(;;; terms1 and terms2 are lists of terms to be equated.) s
26.6 651 M
(\(define \(unify:dispatch terms1 terms2\)) s
26.6 638 M
(  \(assert \(list? terms1\)\)) s
26.6 625 M
(  \(assert \(list? terms2\)\)) s
26.6 612 M
(  \(define \(unify-dispatcher dict succeed fail\)) s
26.6 599 M
(    \(if \(and \(null? terms1\) \(null? terms2\)\)) s
26.6 586 M
(        \(succeed dict fail terms1 terms2\)) s
26.6 573 M
(        \(\(unify:gdispatch terms1 terms2\)) s
26.6 560 M
(         dict) s
26.6 547 M
(         \(lambda \(dict* fail* rest1 rest2\)) s
26.6 534 M
(           \(\(unify:dispatch rest1 rest2\)) s
26.6 521 M
(            dict* succeed fail*\)\)) s
26.6 508 M
(         fail\)\)\)) s
26.6 495 M
(  unify-dispatcher\)) s
26.6 469 M
(\(define \(unify:fail terms1 terms2\)) s
26.6 456 M
(  \(define \(unify-fail dict succeed fail\)) s
26.6 443 M
(    \(fail\)\)) s
26.6 430 M
(  unify-fail\)) s
26.6 404 M
(\(define unify:gdispatch) s
26.6 391 M
(  \(simple-generic-procedure 'unify 2 unify:fail\)\)) s
26.6 365 M
(\(define \(car-satisfies pred\)) s
26.6 352 M
(  \(lambda \(terms\)) s
26.6 339 M
(    \(and \(pair? terms\)) s
26.6 326 M
(         \(pred \(car terms\)\)\)\)\)) s
26.6 300 M
(\(define \(unify:constant-terms terms1 terms2\)) s
26.6 287 M
(  \(let \(\(first1 \(car terms1\)\) \(rest1 \(cdr terms1\)\)) s
26.6 274 M
(        \(first2 \(car terms2\)\) \(rest2 \(cdr terms2\)\)\)) s
26.6 261 M
(    \(define \(unify-constants dict succeed fail\)) s
26.6 248 M
(      \(if \(eqv? first1 first2\)) s
26.6 235 M
(          \(succeed dict fail rest1 rest2\)) s
26.6 222 M
(          \(fail\)\)\)) s
26.6 209 M
(    unify-constants\)\)) s
26.6 183 M
(\(define \(constant-term? term\)) s
26.6 170 M
(  \(and \(not \(match:var? term\)\)) s
26.6 157 M
(       \(not \(list? term\)\)\)\)) s
26.6 131 M
(;; coderef: unify-constant-terms) s
26.6 118 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 105 M
(  \(match-args \(car-satisfies constant-term?\)) s
26.6 92 M
(              \(car-satisfies constant-term?\)\)) s
26.6 79 M
(  unify:constant-terms\)) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
18 36 translate
/pagenum 3 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 677 M
(\(define \(unify:list-terms terms1 terms2\)) s
26.6 664 M
(  \(let \(\(first1 \(car terms1\)\) \(rest1 \(cdr terms1\)\)) s
26.6 651 M
(        \(first2 \(car terms2\)\) \(rest2 \(cdr terms2\)\)\)) s
26.6 638 M
(    \(define \(unify-lists dict succeed fail\)) s
26.6 625 M
(      \(\(unify:dispatch first1 first2\)) s
26.6 612 M
(       dict) s
26.6 599 M
(       \(lambda \(dict* fail* null1 null2\)) s
26.6 586 M
(         \(assert \(null? null1\)\)) s
26.6 573 M
(         \(assert \(null? null2\)\)) s
26.6 560 M
(         \(succeed dict* fail* rest1 rest2\)\)) s
26.6 547 M
(       fail\)\)) s
26.6 534 M
(    unify-lists\)\)) s
26.6 508 M
(\(define \(list-term? term\)) s
26.6 495 M
(  \(and \(not \(match:var? term\)\)) s
26.6 482 M
(       \(list? term\)\)\)) s
26.6 456 M
(;; coderef: unify-list-terms) s
26.6 443 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 430 M
(  \(match-args \(car-satisfies list-term?\)) s
26.6 417 M
(              \(car-satisfies list-term?\)\)) s
26.6 404 M
(  unify:list-terms\)) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
18 36 translate
/pagenum 4 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (4) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 677 M
(;;; This is the syntactic equation solver for element vars.) s
26.6 651 M
(\(define \(maybe-substitute var-first terms\)) s
26.6 638 M
(  \(define \(unify-substitute dict succeed fail\)) s
26.6 625 M
(    \(let \(\(var \(car var-first\)\) \(rest1 \(cdr var-first\)\)) s
26.6 612 M
(          \(term \(car terms\)\) \(rest2 \(cdr terms\)\)\)) s
26.6 599 M
(      \(cond \(\(and \(match:element-var? term\)) s
26.6 586 M
(                  \(match:vars-equal? var term\)\)) s
26.6 573 M
(             \(succeed dict fail rest1 rest2\)\)) s
26.6 560 M
(            \(\(match:has-binding? var dict\)) s
26.6 547 M
(             \(\(unify:dispatch \(cons \(match:get-value var dict\) rest1\)) s
26.6 534 M
(                              terms\)) s
26.6 521 M
(              dict succeed fail\)\)) s
26.6 508 M
(            \(else) s
26.6 495 M
(             \(let \(\(dict* \(do-substitute var term dict\)\)\)) s
26.6 482 M
(               \(if dict*) s
26.6 469 M
(                   \(succeed dict* fail rest1 rest2\)) s
26.6 456 M
(                   \(fail\)\)\)\)\)\)\)) s
26.6 443 M
(  unify-substitute\)) s
26.6 417 M
(\(define \(do-substitute var term dict\)) s
26.6 404 M
(  \(let \(\(term* \(\(match:dict-substitution dict\) term\)\)\)) s
26.6 391 M
(    \(and \(match:satisfies-restriction? var term*\)) s
26.6 378 M
(         \(or \(and \(match:var? term*\)) s
26.6 365 M
(                  \(match:vars-equal? var term*\)\)) s
26.6 352 M
(             \(not \(match:occurs-in? var term*\)\)\)) s
26.6 339 M
(         \(match:extend-dict var term*) s
26.6 326 M
(           \(match:map-dict-values) s
26.6 313 M
(            \(match:single-substitution var term*\)) s
26.6 300 M
(            dict\)\)\)\)\)) s
26.6 274 M
(\(define \(element-1? term\)) s
26.6 261 M
(  \(any-object? term\)\)) s
26.6 235 M
(\(define \(element? term\)) s
26.6 222 M
(  \(not \(match:segment-var? term\)\)\)) s
26.6 196 M
(;; coderef: element-var-thing) s
26.6 183 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 170 M
(  \(match-args \(car-satisfies match:element-var?\)) s
26.6 157 M
(              \(car-satisfies element?\)\)) s
26.6 144 M
(  \(lambda \(var-first terms\)) s
26.6 131 M
(    \(maybe-substitute var-first terms\)\)\)) s
26.6 105 M
(;; coderef: thing-element-var) s
26.6 92 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 79 M
(  \(match-args \(car-satisfies element?\)) s
26.6 66 M
(              \(car-satisfies match:element-var?\)\)) s
26.6 53 M
(  \(lambda \(terms var-first\)) s
26.6 40 M
(    \(maybe-substitute var-first terms\)\)\)) s
_R
S
%%Page: (5) 5
%%BeginPageSetup
_S
18 36 translate
/pagenum 5 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (5) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 677 M
(;;; Segment variable extensions) s
26.6 651 M
(\(define \(unify:segment-var-var var-first1 var-first2\)) s
26.6 638 M
(  \(define \(unify-seg-var-var dict succeed fail\)) s
26.6 625 M
(    \(if \(match:vars-equal? \(car var-first1\) \(car var-first2\)\)) s
26.6 612 M
(        \(succeed dict fail \(cdr var-first1\) \(cdr var-first2\)\)) s
26.6 599 M
(        \(\(maybe-grab-segment var-first1 var-first2\)) s
26.6 586 M
(         dict) s
26.6 573 M
(         succeed) s
26.6 560 M
(         \(lambda \(\)) s
26.6 547 M
(           \(\(maybe-grab-segment var-first2 var-first1\)) s
26.6 534 M
(            dict) s
26.6 521 M
(            succeed) s
26.6 508 M
(            fail\)\)\)\)\)) s
26.6 495 M
(  unify-seg-var-var\)) s
26.6 469 M
(;; coderef: segment-var-var) s
26.6 456 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 443 M
(  \(match-args \(car-satisfies match:segment-var?\)) s
26.6 430 M
(              \(car-satisfies match:segment-var?\)\)) s
26.6 417 M
(  unify:segment-var-var\)) s
26.6 391 M
(;; coderef: segment-var-thing) s
26.6 378 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 365 M
(  \(match-args \(car-satisfies match:segment-var?\)) s
26.6 352 M
(              \(complement \(car-satisfies match:segment-var?\)\)\)) s
26.6 339 M
(  \(lambda \(var-first terms\)) s
26.6 326 M
(    \(maybe-grab-segment var-first terms\)\)\)) s
26.6 300 M
(;; coderef: thing-segment-var) s
26.6 287 M
(\(define-generic-procedure-handler unify:gdispatch) s
26.6 274 M
(  \(match-args \(complement \(car-satisfies match:segment-var?\)\)) s
26.6 261 M
(              \(car-satisfies match:segment-var?\)\)) s
26.6 248 M
(  \(lambda \(terms var-first\)) s
26.6 235 M
(    \(maybe-grab-segment var-first terms\)\)\)) s
_R
S
%%Page: (6) 6
%%BeginPageSetup
_S
18 36 translate
/pagenum 6 def
/fname (unify.scm) def
/fdir (.) def
/ftail (unify.scm) def
% User defined strings:
/fmodstr (Sun Jul 05 17:53:02 2020) def
/pagenumstr (6) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
26.6 677 M
(\(define \(maybe-grab-segment var-first terms\)) s
26.6 664 M
(  \(define \(maybe-grab dict succeed fail\)) s
26.6 651 M
(    \(let \(\(var \(car var-first\)\)\)) s
26.6 638 M
(      \(if \(match:has-binding? var dict\)) s
26.6 625 M
(          \(\(unify:dispatch) s
26.6 612 M
(            \(append \(match:get-value var dict\)) s
26.6 599 M
(                    \(cdr var-first\)\)) s
26.6 586 M
(            terms\)) s
26.6 573 M
(           dict succeed fail\)) s
26.6 560 M
(          \(\(grab-segment var-first terms\)) s
26.6 547 M
(           dict succeed fail\)\)\)\)) s
26.6 534 M
(  maybe-grab\)) s
26.6 508 M
(;; Try to match against each possible list.  If the last element) s
26.6 495 M
(;; in the match is a segvar and bound, then expand it otherwise,) s
26.6 482 M
(;; you have to worry about partial containment.) s
26.6 456 M
(\(define \(grab-segment var-first terms\)) s
26.6 443 M
(  \(define \(grab dict succeed fail\)) s
26.6 430 M
(    \(let \(\(var \(car var-first\)\)\)) s
26.6 417 M
(      \(let slp \(\(initial '\(\)\) \(terms* terms\)\)) s
26.6 404 M
(        \(define \(continue\)) s
26.6 391 M
(          \(if \(null? terms*\)) s
26.6 378 M
(              \(fail\)) s
26.6 365 M
(              \(slp \(append initial \(list \(car terms*\)\)\)) s
26.6 352 M
(                   \(cdr terms*\)\)\)\)) s
26.6 339 M
(        \(let \(\(dict* \(do-substitute var initial dict\)\)\)) s
26.6 326 M
(          \(if dict*) s
26.6 313 M
(              \(succeed dict* continue \(cdr var-first\) terms*\)) s
26.6 300 M
(              \(continue\)\)\)\)\)\)) s
26.6 287 M
(  grab\)) s
_R
S
%%Trailer
%%Pages: 6
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
